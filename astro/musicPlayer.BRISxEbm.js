import{m as f}from"./music.CNPadTJM.js";class o{static STORAGE_KEY="musicPlayerState";static MAX_AGE=24*60*60*1e3;static save(t){try{const e={...t,timestamp:Date.now()};localStorage.setItem(this.STORAGE_KEY,JSON.stringify(e))}catch(e){console.warn("Failed to save music player state:",e)}}static restore(){try{const t=localStorage.getItem(this.STORAGE_KEY);if(t){const e=JSON.parse(t);if(Date.now()-(e.timestamp||0)<this.MAX_AGE)return delete e.timestamp,e}}catch(t){console.warn("Failed to restore music player state:",t)}return null}static clear(){localStorage.removeItem(this.STORAGE_KEY)}}class r extends EventTarget{static instance=null;audioElement;audioContext=null;gainNode=null;source=null;hasUserInteracted=!1;progressUpdateInterval=null;stateCheckInterval=null;lastSavedTime=0;isTabActive=!0;pendingPlayback=null;activePlayRequest=null;state={currentTrack:null,currentAlbum:null,currentTrackIndex:0,isPlaying:!1,isLooping:!1,volume:.7,currentTime:0,duration:0,isShuffled:!1,shuffledOrder:[],originalOrder:[],isVisible:!1};constructor(){super(),this.createGlobalAudioElement(),this.setupAudioEventListeners(),this.setupVisibilityHandling(),this.setupUserInteractionDetection(),this.startProgressUpdater(),this.startStateChecker(),this.restoreState()}static getInstance(){return r.instance||(r.instance=new r),r.instance}createGlobalAudioElement(){let t=document.getElementById("global-audio-player");t||(t=document.createElement("audio"),t.id="global-audio-player",t.preload="metadata",t.style.display="none",t.setAttribute("playsinline","true"),t.setAttribute("webkit-playsinline","true"),document.body.appendChild(t)),this.audioElement=t,this.audioElement.volume=this.state.volume}setupAudioEventListeners(){this.audioElement.addEventListener("loadedmetadata",()=>{this.state.duration=this.audioElement.duration,this.emitEvent("progress-updated",{currentTime:this.state.currentTime,duration:this.state.duration,percentage:this.state.duration?this.state.currentTime/this.state.duration*100:0})}),this.audioElement.addEventListener("timeupdate",()=>{this.state.currentTime=this.audioElement.currentTime,this.emitEvent("progress-updated",{currentTime:this.state.currentTime,duration:this.state.duration,percentage:this.state.duration?this.state.currentTime/this.state.duration*100:0})}),this.audioElement.addEventListener("play",()=>{this.state.isPlaying=!0,this.hasUserInteracted=!0,this.createAudioContextIfNeeded(),this.emitStateChanged(),this.saveState()}),this.audioElement.addEventListener("pause",()=>{this.state.isPlaying=!1,this.emitStateChanged(),this.saveState()}),this.audioElement.addEventListener("ended",()=>{this.handleTrackEnd()}),this.audioElement.addEventListener("error",t=>{console.error("Audio playback error:",t),this.emitEvent("playback-error",{error:"Audio playback failed",track:this.state.currentTrack||void 0})}),this.audioElement.addEventListener("suspend",()=>this.saveState()),this.audioElement.addEventListener("resume",()=>this.checkAndRestorePlayback()),this.audioElement.addEventListener("stalled",()=>this.handleAudioStall()),this.audioElement.addEventListener("canplaythrough",()=>this.handleCanPlayThrough())}setupVisibilityHandling(){document.addEventListener("visibilitychange",()=>{this.isTabActive=!document.hidden,this.isTabActive&&this.hasUserInteracted?this.checkAndRestorePlayback():this.saveState()}),window.addEventListener("focus",()=>{this.isTabActive=!0,this.hasUserInteracted&&this.checkAndRestorePlayback()}),window.addEventListener("blur",()=>{this.isTabActive=!1,this.saveState()}),window.addEventListener("beforeunload",()=>this.saveState()),window.addEventListener("pageshow",t=>{t.persisted&&this.hasUserInteracted&&this.checkAndRestorePlayback()}),window.addEventListener("pagehide",()=>this.saveState())}setupUserInteractionDetection(){const t=()=>{this.hasUserInteracted||(this.hasUserInteracted=!0,console.log("ðŸŽµ User interaction detected - audio enabled"),this.createAudioContextIfNeeded(),this.pendingPlayback&&(console.log("ðŸŽµ Starting pending playback"),this.play(this.pendingPlayback.trackId,this.pendingPlayback.albumId,this.pendingPlayback.options),this.pendingPlayback=null),document.removeEventListener("click",t),document.removeEventListener("keydown",e),document.removeEventListener("touchstart",t))},e=a=>{["Tab","Shift","Control","Alt","Meta"].includes(a.key)||t()},s=()=>{document.addEventListener("click",t,{once:!0}),document.addEventListener("keydown",e,{once:!0}),document.addEventListener("touchstart",t,{once:!0})};s(),document.addEventListener("astro:page-load",()=>{this.pendingPlayback&&(console.log("ðŸŽµ Re-setting up interaction listeners for pending playback after navigation"),s())})}async createAudioContextIfNeeded(){if(!this.hasUserInteracted)return!1;if(!this.audioContext)try{return this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.gainNode=this.audioContext.createGain(),this.source=this.audioContext.createMediaElementSource(this.audioElement),this.source.connect(this.gainNode),this.gainNode.connect(this.audioContext.destination),this.gainNode.gain.value=this.state.volume,console.log("ðŸŽµ AudioContext created successfully"),!0}catch(t){return console.warn("Web Audio API not supported:",t),!1}if(this.audioContext.state==="suspended")try{return await this.audioContext.resume(),console.log("ðŸŽµ AudioContext resumed"),!0}catch(t){return console.warn("Failed to resume AudioContext:",t),!1}return!0}startProgressUpdater(){this.progressUpdateInterval=window.setInterval(()=>{this.state.isPlaying&&!this.audioElement.paused&&(this.state.currentTime=this.audioElement.currentTime,this.emitEvent("progress-updated",{currentTime:this.state.currentTime,duration:this.state.duration,percentage:this.state.duration?this.state.currentTime/this.state.duration*100:0}),Math.abs(this.state.currentTime-this.lastSavedTime)>5&&(this.lastSavedTime=this.state.currentTime,this.saveState()))},100)}startStateChecker(){this.stateCheckInterval=window.setInterval(()=>{this.state.isPlaying&&this.audioElement.paused&&this.hasUserInteracted&&(console.log("Detected unexpected pause, attempting to resume..."),this.audioElement.play().catch(t=>{console.warn("Failed to auto-resume:",t)})),this.state.isPlaying&&this.saveState()},2e3)}handleTrackEnd(){this.state.isPlaying=!1,this.state.currentTrack&&this.emitEvent("track-ended",{track:this.state.currentTrack}),this.state.isLooping&&this.state.currentTrack?(console.log(`ðŸŽµ Looping track: ${this.state.currentTrack.title}`),this.audioElement.currentTime=0,setTimeout(()=>{this.audioElement.play().catch(t=>{console.error("Failed to loop track:",t)})},50)):setTimeout(()=>{this.nextTrack()},100)}handleAudioStall(){console.warn("Audio stalled, attempting to resume..."),this.state.isPlaying&&this.hasUserInteracted&&setTimeout(()=>{this.audioElement.play().catch(t=>{console.error("Failed to resume after stall:",t)})},1e3)}handleCanPlayThrough(){this.state.isPlaying&&this.audioElement.paused&&this.hasUserInteracted&&this.audioElement.play().catch(t=>{console.error("Failed to resume after canplaythrough:",t)})}checkAndRestorePlayback(){this.hasUserInteracted&&setTimeout(()=>{try{const t=o.restore();t?.isPlaying&&t.currentTrack&&(this.audioElement.src!==t.currentTrack.file&&(this.audioElement.src=t.currentTrack.file,this.audioElement.currentTime=t.currentTime||0),this.audioElement.paused&&this.audioElement.play().catch(e=>{console.log("Could not auto-resume playback:",e.message)}))}catch(t){console.error("Failed to restore playback:",t)}},100)}initializeShuffleOrder(){this.state.currentAlbum&&(this.state.originalOrder=Array.from({length:this.state.currentAlbum.tracks.length},(t,e)=>e),this.generateShuffledOrder())}generateShuffledOrder(){if(this.state.currentAlbum){this.state.shuffledOrder=[...this.state.originalOrder];for(let t=this.state.shuffledOrder.length-1;t>0;t--){const e=Math.floor(Math.random()*(t+1));[this.state.shuffledOrder[t],this.state.shuffledOrder[e]]=[this.state.shuffledOrder[e],this.state.shuffledOrder[t]]}}}getCurrentOrder(){return this.state.isShuffled?this.state.shuffledOrder:this.state.originalOrder}findCurrentTrackInOrder(){return this.getCurrentOrder().indexOf(this.state.currentTrackIndex)}findTrackById(t,e){const s=f.albums.find(i=>i.id===e);if(!s)return null;const a=s.tracks.findIndex(i=>i.id===t);return a===-1?null:{track:s.tracks[a],album:s,index:a}}saveState(){o.save(this.state)}restoreState(){const t=o.restore();t&&(this.state={...this.state,...t},t.isPlaying&&(this.state.isPlaying=!1,this.pendingPlayback=t.currentTrack?{trackId:t.currentTrack.id,albumId:t.currentAlbum?.id||"",options:{forceStart:!0,preservePosition:!0}}:null),this.emitStateChanged())}emitEvent(t,e){this.dispatchEvent(new CustomEvent(t,{detail:e}))}emitStateChanged(){this.emitEvent("state-changed",{state:{...this.state}})}async safePlay(t){try{if(t.aborted)return;await this.audioElement.play()}catch(e){if(e instanceof DOMException&&e.name==="AbortError"){console.log("ðŸŽµ Play request was interrupted by another action");return}throw e}}async play(t,e,s={}){this.activePlayRequest&&this.activePlayRequest.abort(),this.activePlayRequest=new AbortController;const a=this.activePlayRequest.signal,i=this.findTrackById(t,e);if(!i)throw new Error(`Track not found: ${t} in album ${e}`);const{track:n,album:d,index:u}=i,l=this.state.currentTrack?.id===t,m=s.forceStart||s.albumPlayback;if(!a.aborted){if(this.state.currentTrack=n,this.state.currentAlbum=d,this.state.currentTrackIndex=u,this.state.isVisible=!0,this.state.originalOrder.length||this.initializeShuffleOrder(),this.loadTrackState(t),!this.hasUserInteracted){this.pendingPlayback={trackId:t,albumId:e,options:s},console.log("ðŸ”‡ Playback pending user interaction"),this.emitStateChanged();return}try{if(a.aborted)return;if(l&&!m)s.restart&&(this.audioElement.currentTime=0),this.audioElement.paused&&!a.aborted&&await this.safePlay(a);else{if(this.audioElement.paused||this.audioElement.pause(),a.aborted)return;this.audioElement.src=n.file;const h=s.preservePosition&&l&&this.state.currentTime>0?this.state.currentTime:0;this.audioElement.currentTime=h,this.state.currentTime=h,await this.createAudioContextIfNeeded(),a.aborted||await this.safePlay(a)}if(a.aborted)return;this.emitEvent("track-started",{track:n,album:d,options:s}),this.emitStateChanged(),this.saveState(),this.activePlayRequest=null}catch(c){a.aborted||(console.error("Failed to play track:",c),this.emitEvent("playback-error",{error:`Failed to play ${n.title}`,track:n})),this.activePlayRequest=null}}}pause(){this.audioElement.paused||(this.audioElement.pause(),this.state.currentTrack&&this.emitEvent("track-paused",{track:this.state.currentTrack}))}async resume(){if(!this.hasUserInteracted)return;this.activePlayRequest&&this.activePlayRequest.abort(),this.activePlayRequest=new AbortController;const t=this.activePlayRequest.signal;try{this.state.currentTrack&&this.state.currentAlbum&&(!this.audioElement.src||this.audioElement.src!==this.state.currentTrack.file)&&(console.log("ðŸŽµ Reloading track for resume:",this.state.currentTrack.title),t.aborted||(this.audioElement.src=this.state.currentTrack.file,this.audioElement.currentTime=this.state.currentTime||0,await this.createAudioContextIfNeeded())),this.state.currentTrack&&this.audioElement.paused&&!t.aborted&&(console.log("ðŸŽµ Starting playback from resume"),await this.safePlay(t),t.aborted||(this.state.isPlaying=!0,this.emitEvent("track-resumed",{track:this.state.currentTrack}),this.emitStateChanged(),this.saveState())),this.activePlayRequest=null}catch(e){t.aborted||console.error("Failed to resume:",e),this.activePlayRequest=null}}stop(){this.audioElement.pause(),this.audioElement.currentTime=0,this.state.currentTime=0,this.state.isPlaying=!1,this.emitStateChanged()}nextTrack(){if(!this.state.currentAlbum)return;this.state.isLooping=!1,this.saveTrackState();const t=this.getCurrentOrder(),e=this.findCurrentTrackInOrder();let s;e>=t.length-1?s=0:s=e+1;const a=t[s],i=this.state.currentAlbum.tracks[a];console.log(`ðŸŽµ Next track: ${i.title} (${this.state.isShuffled?"shuffled":"normal"} order)`),this.play(i.id,this.state.currentAlbum.id,{forceStart:!0}),this.emitEvent("track-changed",{track:i,album:this.state.currentAlbum,isAutoplay:!0})}previousTrack(){if(!this.state.currentAlbum)return;this.state.isLooping=!1,this.saveTrackState();const t=this.getCurrentOrder(),e=this.findCurrentTrackInOrder();let s;e<=0?s=t.length-1:s=e-1;const a=t[s],i=this.state.currentAlbum.tracks[a];console.log(`ðŸŽµ Previous track: ${i.title} (${this.state.isShuffled?"shuffled":"normal"} order)`),this.play(i.id,this.state.currentAlbum.id,{forceStart:!0}),this.emitEvent("track-changed",{track:i,album:this.state.currentAlbum,isAutoplay:!1})}seek(t){this.audioElement.duration&&!isNaN(this.audioElement.duration)&&(this.audioElement.currentTime=Math.max(0,Math.min(t,this.audioElement.duration)),this.state.currentTime=this.audioElement.currentTime,this.saveState())}setVolume(t){this.hasUserInteracted=!0,this.state.volume=Math.max(0,Math.min(1,t)),this.audioElement.volume=this.state.volume,this.gainNode&&(this.gainNode.gain.value=this.state.volume),this.emitEvent("volume-changed",{volume:this.state.volume}),this.saveState()}toggleLoop(){this.hasUserInteracted=!0,this.state.isLooping=!this.state.isLooping,this.saveTrackState(),this.state.currentTrack&&this.emitEvent("loop-changed",{isLooping:this.state.isLooping,trackTitle:this.state.currentTrack.title}),console.log(`ðŸŽµ Loop ${this.state.isLooping?"enabled":"disabled"}`)}toggleShuffle(){this.state.isShuffled=!this.state.isShuffled,this.state.isShuffled&&this.generateShuffledOrder(),this.emitEvent("shuffle-changed",{isShuffled:this.state.isShuffled,order:this.getCurrentOrder()}),console.log(`ðŸŽµ Shuffle ${this.state.isShuffled?"enabled":"disabled"}`),this.saveState()}getState(){return{...this.state}}loadTrackState(t){try{const e=JSON.parse(localStorage.getItem("trackLoopStates")||"{}");this.state.isLooping=e[t]||!1}catch(e){console.error("Failed to load track state:",e),this.state.isLooping=!1}}saveTrackState(){if(this.state.currentTrack)try{const t=JSON.parse(localStorage.getItem("trackLoopStates")||"{}");t[this.state.currentTrack.id]=this.state.isLooping,localStorage.setItem("trackLoopStates",JSON.stringify(t))}catch(t){console.error("Failed to save track state:",t)}}onTrackStarted(t){this.addEventListener("track-started",t)}onTrackPaused(t){this.addEventListener("track-paused",t)}onTrackResumed(t){this.addEventListener("track-resumed",t)}onTrackEnded(t){this.addEventListener("track-ended",t)}onTrackChanged(t){this.addEventListener("track-changed",t)}onStateChanged(t){this.addEventListener("state-changed",t)}onVolumeChanged(t){this.addEventListener("volume-changed",t)}onLoopChanged(t){this.addEventListener("loop-changed",t)}onShuffleChanged(t){this.addEventListener("shuffle-changed",t)}onProgressUpdated(t){this.addEventListener("progress-updated",t)}onPlaybackError(t){this.addEventListener("playback-error",t)}destroy(){this.progressUpdateInterval&&clearInterval(this.progressUpdateInterval),this.stateCheckInterval&&clearInterval(this.stateCheckInterval),this.source&&this.source.disconnect(),this.gainNode&&this.gainNode.disconnect(),this.audioContext&&this.audioContext.close(),r.instance=null}}const g=r.getInstance();typeof window<"u"&&(window.musicPlayer=g);export{g as m};
